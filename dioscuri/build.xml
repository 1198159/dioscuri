<?xml version="1.0" ?>

<!--
 Automated tasks for the Dioscuri project
-->

<project name="Dioscuri" basedir=".">

    <description>
        Build file for Dioscuri, the modular emulator
    </description>

	<property name="version" value="0.4.1"/>
	<property name="main-class"  value="nl.kbna.dioscuri.GUI"/>

	<!-- Directories in this tree -->
    <property name="src.dir"     value="${basedir}"/>
    <property name="libs.dir"    value="${basedir}/libs"/>
    <property name="gen-src.dir" value="${basedir}/generated-src"/>
    <property name="config.dir"  value="${basedir}/config"/>
    <property name="log.dir"     value="${basedir}/log"/>
    <property name="images.dir"  value="${basedir}/images"/>
    <property name="build.dir"   value="${basedir}/build"/>
    <property name="classes.dir" value="${build.dir}/classes"/>
    <property name="jar.dir"     value="${build.dir}/jar"/>
    <property name="javadoc.dir" value="${build.dir}/javadoc"/>

    <!-- Classpath -->
    <path id="master-classpath">
        <fileset dir="${libs.dir}">
            <include name="*.jar"/>
        </fileset>
	<pathelement location="."/>
    </path>

    <!-- JAXB compiler task definition -->
    <taskdef name="xjc" classname="com.sun.tools.xjc.XJCTask" classpathref="master-classpath"/>

    <!-- Delete output files and directories -->
    <target name="clean" description="Clean the build tree">
    	<delete dir="${gen-src.dir}" quiet="true"/>
        <delete dir="${build.dir}" quiet="true"/>
		<delete>
		    <fileset dir="${log.dir}" includes="**/emulator*.txt" excludes="**/emulator0.txt"/>
	  	</delete>
    </target>

    <!-- Generate Java classes from XML using JAXB -->
    <target name="generated.src" description="Build the config JAXB classes from DioscuriConfig.xsd">
		<mkdir dir="${gen-src.dir}"/>
    	<xjc schema="${config.dir}/DioscuriConfig.xsd" destdir="${gen-src.dir}" package="nl.kbna.dioscuri.config">
    	    <produces dir="${gen-src.dir}" includes="**/*.java" />
    	</xjc>
    </target>

    <!-- Compile the source directory tree -->
    <target name="compile" depends="generated.src" description="Compiles the source directory tree">
		<mkdir dir="${classes.dir}"/>
		<javac srcdir="${gen-src.dir}" destdir="${classes.dir}" classpathref="master-classpath" fork="yes"/>
		<javac srcdir="." destdir="${classes.dir}" classpathref="master-classpath" fork="yes"/>
    </target>

    <!-- Create the javadoc files -->
    <target name="javadoc" description="Create the javadoc files">
		<mkdir dir="${javadoc.dir}"/>
        <javadoc packagenames="nl.kbna.*" sourcepath="." destdir="${javadoc.dir}" author="true" version="true" use="true"  classpathref="master-classpath">
            <classpath>
                <dirset dir="."/>
                <path refid="master-classpath"/>
            </classpath>
        </javadoc>
    </target>

    <!-- Create a runnable jar file -->
    <target name="jar" description="Create the Dioscuri jar file" depends="compile">
		<mkdir dir="${jar.dir}"/>
		<tstamp/>
        <jar destfile="${jar.dir}/${ant.project.name}-${version}.jar" basedir="${classes.dir}">
			<manifest>
				<attribute name="Built-By" value="KEEP project"/>
				<attribute name="Built-On" value="${TODAY}"/>
				<attribute name="Main-Class" value="${main-class}"/>
			</manifest>
        </jar>
    </target>

    <!-- Create a complete release (zip/gzip file, including jar, docs, logs, config and images) -->
    <target name="release" description="Create a complete release" depends="clean, javadoc, jar">
		<zip destfile="${build.dir}/${ant.project.name}-${version}.zip">
			<fileset dir="${jar.dir}" />
			<zipfileset dir="${config.dir}" prefix="config"/>
			<zipfileset dir="${images.dir}" excludes="**/*.img" prefix="images"/>
			<zipfileset dir="${log.dir}" includes="emulator0.txt" prefix="log"/>
			<fileset dir="${basedir}" includes="*.txt"/>
			<fileset dir="${basedir}" includes="dioscuri.bat"/>
			<zipfileset dir="${javadoc.dir}" prefix="api"/>
		</zip>
    	<tar destfile="${build.dir}/${ant.project.name}-${version}.tar.gz" compression="gzip">
			<fileset dir="${jar.dir}" />
			<tarfileset dir="${config.dir}" prefix="config"/>
			<tarfileset dir="${images.dir}" excludes="**/*.img" prefix="images"/>
			<tarfileset dir="${log.dir}" includes="emulator0.txt" prefix="log"/>
			<fileset dir="${basedir}" includes="*.txt"/>
			<fileset dir="${basedir}" includes="dioscuri.bat"/>
			<tarfileset dir="${javadoc.dir}" prefix="api"/>
		</tar>
	</target>

    <!-- Execute the jar file -->
    <target name="run">
        <java jar="${jar.dir}/${ant.project.name}-${version}.jar" fork="true"/>
    </target>

    <!-- Default target -->
    <target name="main" depends="clean, run"/>

</project>