############################################################
#  	Emulator Logging Configuration File
#
# You can use a different file by specifying a filename
# with the java.util.logging.config.file system property.  
# For example java -Djava.util.logging.config.file=myfile
############################################################

############################################################
#  	Global properties
############################################################

# "handlers" specifies a comma separated list of log Handler 
# classes.  These handlers will be installed during VM startup.
# Note that these classes must be on the system classpath.
# By default we only configure a ConsoleHandler, which will only
# show messages at the INFO and above levels.
# handlers= java.util.logging.ConsoleHandler

# To also add the FileHandler, use the following line instead.
handlers= java.util.logging.FileHandler, java.util.logging.ConsoleHandler

# Default global logging level.
# This specifies which kinds of events are logged across
# all loggers.  For any given facility this global level
# can be overriden by a facility specific level
# Note that the ConsoleHandler also has a separate level
# setting to limit messages printed to the console.
.level= WARNING

############################################################
# Handler specific properties.
# Describes specific configuration info for Handlers.
############################################################
# Explanation of the variables
# Var  Description
# %h   The value of the user.home system property.
# %t   The system temporary directory.
# %u   A unique number to resolve conflicts.
# %g   The generation number for rotated logs. (A .%g suffix is used if rotation is specified and the pattern doesn't contain %g.)
# %%   The % character.

# default file output is in user's home directory.
java.util.logging.FileHandler.pattern = ./log/emulator%u.txt
java.util.logging.FileHandler.limit = 0
java.util.logging.FileHandler.count = 1
java.util.logging.FileHandler.formatter = nl.kbna.dioscuri.logging.FileFormatter
#java.util.logging.FileHandler.formatter = java.util.logging.XMLFormatter

# Limit the message that are printed on the console to INFO and above.
java.util.logging.ConsoleHandler.level = SEVERE
java.util.logging.ConsoleHandler.formatter = nl.kbna.dioscuri.logging.ConsoleFormatter

############################################################
# Facility specific properties.
# Provides extra control for each logger.
############################################################

# For example, set the com.xyz.foo logger to only log SEVERE
# messages:
#com.xyz.foo.level = SEVERE
#nl.kbna.dioscuri.gui.level                = WARNING
#nl.kbna.dioscuri.module.ata.level         = WARNING
#nl.kbna.dioscuri.module.clock.level       = WARNING
#nl.kbna.dioscuri.module.cpu.level         = WARNING
#nl.kbna.dioscuri.module.dma.level         = WARNING
#nl.kbna.dioscuri.module.fdc.level         = WARNING
#nl.kbna.dioscuri.module.keyboard.level    = WARNING
#nl.kbna.dioscuri.module.memory.level      = WARNING
#nl.kbna.dioscuri.module.motherboard.level = WARNING
#nl.kbna.dioscuri.module.pit.level         = WARNING
#nl.kbna.dioscuri.module.pic.level         = WARNING
#nl.kbna.dioscuri.module.rtc.level         = WARNING
#nl.kbna.dioscuri.module.video.level       = WARNING
